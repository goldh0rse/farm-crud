services:
  mongo:
    image: mongo
    container_name: mongo_db
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_db:/data/db
      - mongo_db:/data/configdb
  
  rest_api:
    container_name: rest_api
    restart: unless-stopped
    ports:
      - 1337:1337
      - 9100:9100
    environment:
      - NODE_ENV=production
    build:
      context: ./server/

  login_ui:
    container_name: login_ui
    restart: unless-stopped
    ports:
      - 3005:3005
    environment:
      - NODE_ENV=production
    build:
      context: ./ui/
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning/datasources

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:v0.45.0     
  #   container_name: cadvisor
  #   ports:
  #     - "8080:8080"
  #   network_mode: host
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /dev/disk/:/dev/disk:ro
  #   devices:
  #     - /dev/kmsg
  #   restart: unless-stopped
  #   privileged: true

  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   container_name: node_exporter
  #   command:
  #     - '--path.rootfs=/host'
  #   pid: host
  #   restart: unless-stopped
  #   volumes:
  #     - '/:/host:ro,rslave'

volumes:
  prom_data:
    driver: local
  mongo_db:
    driver: local